// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace streak.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20240905193421_InitialData")]
    partial class InitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Leaderboard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LeaderboardId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Leaderboard");

                    b.HasData(
                        new
                        {
                            Id = new Guid("902ed363-ae11-4b6f-ba59-9f8ba6d08e9b"),
                            Name = "IT Service Sales",
                            OrganizationId = new Guid("c36f337b-2006-4b38-8883-f3c176d9ff80")
                        },
                        new
                        {
                            Id = new Guid("a478da4c-a47b-4d95-896f-06368e844232"),
                            Name = "Product Sales",
                            OrganizationId = new Guid("7edac2a8-a73f-4926-8da3-fea7dbaf2ebd")
                        });
                });

            modelBuilder.Entity("Entities.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("OrganizationId");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c36f337b-2006-4b38-8883-f3c176d9ff80"),
                            Address = "1 Dev Street",
                            Country = "GER",
                            Name = "IT_Solutions Ltd"
                        },
                        new
                        {
                            Id = new Guid("7edac2a8-a73f-4926-8da3-fea7dbaf2ebd"),
                            Address = "2 Dev Street",
                            Country = "GER",
                            Name = "Admin_Solutions Ltd"
                        });
                });

            modelBuilder.Entity("Entities.Participant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ParticipantId");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Participants");

                    b.HasData(
                        new
                        {
                            Id = new Guid("063a04a0-5e1a-44a0-8005-e1737878e712"),
                            Age = 25,
                            Name = "John Smith",
                            OrganizationId = new Guid("7edac2a8-a73f-4926-8da3-fea7dbaf2ebd"),
                            Position = "Software developer"
                        },
                        new
                        {
                            Id = new Guid("79e49410-c239-4443-bc96-30a515289c97"),
                            Age = 28,
                            Name = "Jane Smith",
                            OrganizationId = new Guid("7edac2a8-a73f-4926-8da3-fea7dbaf2ebd"),
                            Position = "Software developer"
                        },
                        new
                        {
                            Id = new Guid("54a31fcb-6d7a-45a4-a60d-e505cec67fa6"),
                            Age = 22,
                            Name = "Jane Hancock",
                            OrganizationId = new Guid("c36f337b-2006-4b38-8883-f3c176d9ff80"),
                            Position = "Administrator"
                        });
                });

            modelBuilder.Entity("Entities.Leaderboard", b =>
                {
                    b.HasOne("Entities.Organization", "Organization")
                        .WithMany("Leaderboards")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Entities.Participant", b =>
                {
                    b.HasOne("Entities.Organization", "Organization")
                        .WithMany("Participants")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Entities.Organization", b =>
                {
                    b.Navigation("Leaderboards");

                    b.Navigation("Participants");
                });
#pragma warning restore 612, 618
        }
    }
}
